"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4743],{3400:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var a=n(1889);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=r,g=d["".concat(p,".").concat(m)]||d[m]||u[m]||i;return n?a.createElement(g,o(o({ref:t},c),{},{components:n})):a.createElement(g,o({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2738:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return u}});var a=n(33),r=n(3220),i=(n(1889),n(3400)),o=["components"],l={id:"get",title:"get",sidebar_label:"get"},p=void 0,s={unversionedId:"api/get",id:"api/get",title:"get",description:"get. retrieve values from the state without adding a listener.",source:"@site/docs/api/get.md",sourceDirName:"api",slug:"/api/get",permalink:"/engine/docs/api/get",draft:!1,editUrl:"https://github.com/code11/engine/edit/master/docs/docs/api/get.md",tags:[],version:"current",frontMatter:{id:"get",title:"get",sidebar_label:"get"},sidebar:"docs",previous:{title:"observe",permalink:"/engine/docs/api/observe"},next:{title:"update",permalink:"/engine/docs/api/update"}},c={},u=[{value:"API",id:"api",level:2},{value:"Best practices",id:"best-practices",level:2}],d={toc:u};function m(e){var t=e.components,n=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"get.<path>")," retrieve values from the state without adding a listener."),(0,i.kt)("p",null,"It should be used for data that is required during execution but that does not trigger the execution (as opposed to ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/observe"},"observe"),")."),(0,i.kt)("p",null,"A ",(0,i.kt)("inlineCode",{parentName:"p"},"get")," can be ",(0,i.kt)("strong",{parentName:"p"},"lazy")," or ",(0,i.kt)("strong",{parentName:"p"},"eager")," depending on whether the value should be available at the moment when the execution starts or at a later point in time."),(0,i.kt)("p",null,"A ",(0,i.kt)("strong",{parentName:"p"},"lazy")," ",(0,i.kt)("inlineCode",{parentName:"p"},"get")," will return an API through which values can be retrieved and an ",(0,i.kt)("strong",{parentName:"p"},"eager")," ",(0,i.kt)("inlineCode",{parentName:"p"},"get")," will provide the values when the execution starts."),(0,i.kt)("p",null,"Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"const doSomeWork: producer = ({\n  eager = get.foo.bar.value(),\n  lazy = get.foo.bar\n}) => {\n  eager; // [1, 2, 3]\n  setTimeout(() => {\n    lazy.value(); // [1, 2, 3]\n  }, 1000);\n}\n")),(0,i.kt)("h2",{id:"api"},"API"),(0,i.kt)("p",null,"A ",(0,i.kt)("strong",{parentName:"p"},"lazy")," ",(0,i.kt)("inlineCode",{parentName:"p"},"get.<path>")," returns an object with following properties:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},".value(params?: object)")," returns the date stored at that ",(0,i.kt)("inlineCode",{parentName:"li"},"<path>"),(0,i.kt)("inlineCode",{parentName:"li"},"params")," is an optional object argument, the keys of which set the\n",(0,i.kt)("a",{parentName:"li",href:"/docs/api/param"},"param"),"s."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},".includes(value: any, params?: object)")," if the value at the given\n",(0,i.kt)("inlineCode",{parentName:"li"},"<path>")," is an array or a string, it returns a boolean if the provided\n",(0,i.kt)("inlineCode",{parentName:"li"},"value")," exists at that ",(0,i.kt)("inlineCode",{parentName:"li"},"<path>")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},".length(params?: object)")," if the value at the given ",(0,i.kt)("inlineCode",{parentName:"li"},"<path>")," is an ",(0,i.kt)("inlineCode",{parentName:"li"},"array"),",a ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),", or a ",(0,i.kt)("inlineCode",{parentName:"li"},"function")," it returns the length property")),(0,i.kt)("p",null,"For the ",(0,i.kt)("inlineCode",{parentName:"p"},"value")," getter method, if the stored data is serializable (e.g a primitive\nJavascript type, a plain object), a copy of the data is returned. However, if\nthe data is not serializable (e.g a class instance, function etc), a reference\nto it is returned."),(0,i.kt)("h2",{id:"best-practices"},"Best practices"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Use more ",(0,i.kt)("inlineCode",{parentName:"p"},"gets")," than ",(0,i.kt)("inlineCode",{parentName:"p"},"observes")," in producers."),(0,i.kt)("p",{parentName:"li"},"Producers should have a very narrow window for triggering and the ",(0,i.kt)("inlineCode",{parentName:"p"},"observe")," should be reserved for the triggering specificity. When you can't justify that some data determines the triggering then that data should be retrieved using a ",(0,i.kt)("inlineCode",{parentName:"p"},"get"),".")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"views")," should not use ",(0,i.kt)("inlineCode",{parentName:"p"},"get"),"."),(0,i.kt)("p",{parentName:"li"},"Views should be completely reactive and always rely on fresh data to re-render."),(0,i.kt)("p",{parentName:"li"},"The only valid exception is regarding handling a user event (like a ",(0,i.kt)("inlineCode",{parentName:"p"},"click"),")\nwhich is outside rendering."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"// DON'T DO THIS!\nconst a: view = ({ a = get.a }) => <div>{a.value()}</div>\n\n// DON\"T DO THIS!\nconst b: view = ({ a = get.a.value() }) => <div>{a}</div>\n\n// ONLY VALID USE CASE\nconst c: view = ({ a = get.a }) => <button onClick={() => console.log(a.value())} />\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Use an ",(0,i.kt)("strong",{parentName:"p"},"eager")," ",(0,i.kt)("inlineCode",{parentName:"p"},"get")," for sync usage.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Use a ",(0,i.kt)("strong",{parentName:"p"},"lazy")," ",(0,i.kt)("inlineCode",{parentName:"p"},"get")," for async usage."))))}m.isMDXComponent=!0}}]);