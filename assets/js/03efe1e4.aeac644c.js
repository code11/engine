"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3388],{8317:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var s=t(7250),r=t(9596);const i={id:"get",title:"get",sidebar_label:"get"},a=void 0,o={id:"api/get",title:"get",description:"get. retrieve values from the state without adding a listener.",source:"@site/docs/api/get.md",sourceDirName:"api",slug:"/api/get",permalink:"/engine/docs/api/get",draft:!1,unlisted:!1,editUrl:"https://github.com/code11/engine/edit/master/docs/docs/api/get.md",tags:[],version:"current",frontMatter:{id:"get",title:"get",sidebar_label:"get"},sidebar:"docs",previous:{title:"observe",permalink:"/engine/docs/api/observe"},next:{title:"update",permalink:"/engine/docs/api/update"}},c={},d=[{value:"API",id:"api",level:2},{value:"Best practices",id:"best-practices",level:2}];function l(e){const n={a:"a",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"get.<path>"})," retrieve values from the state without adding a listener."]}),"\n",(0,s.jsxs)(n.p,{children:["It should be used for data that is required during execution but that does not trigger the execution (as opposed to ",(0,s.jsx)(n.a,{href:"/docs/api/observe",children:"observe"}),")."]}),"\n",(0,s.jsxs)(n.p,{children:["A ",(0,s.jsx)(n.code,{children:"get"})," can be ",(0,s.jsx)(n.strong,{children:"lazy"})," or ",(0,s.jsx)(n.strong,{children:"eager"})," depending on whether the value should be available at the moment when the execution starts or at a later point in time."]}),"\n",(0,s.jsxs)(n.p,{children:["A ",(0,s.jsx)(n.strong,{children:"lazy"})," ",(0,s.jsx)(n.code,{children:"get"})," will return an API through which values can be retrieved and an ",(0,s.jsx)(n.strong,{children:"eager"})," ",(0,s.jsx)(n.code,{children:"get"})," will provide the values when the execution starts."]}),"\n",(0,s.jsx)(n.p,{children:"Example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const doSomeWork: producer = ({\n  eager = get.foo.bar.value(),\n  lazy = get.foo.bar\n}) => {\n  eager; // [1, 2, 3]\n  setTimeout(() => {\n    lazy.value(); // [1, 2, 3]\n  }, 1000);\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"api",children:"API"}),"\n",(0,s.jsxs)(n.p,{children:["A ",(0,s.jsx)(n.strong,{children:"lazy"})," ",(0,s.jsx)(n.code,{children:"get.<path>"})," returns an object with following properties:"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:".value(params?: object)"})," returns the date stored at that ",(0,s.jsx)(n.code,{children:"<path>"}),"\n",(0,s.jsx)(n.code,{children:"params"})," is an optional object argument, the keys of which set the\n",(0,s.jsx)(n.a,{href:"/docs/api/param",children:"param"}),"s."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:".includes(value: any, params?: object)"})," if the value at the given\n",(0,s.jsx)(n.code,{children:"<path>"})," is an array or a string, it returns a boolean if the provided\n",(0,s.jsx)(n.code,{children:"value"})," exists at that ",(0,s.jsx)(n.code,{children:"<path>"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:".length(params?: object)"})," if the value at the given ",(0,s.jsx)(n.code,{children:"<path>"})," is an ",(0,s.jsx)(n.code,{children:"array"}),",a ",(0,s.jsx)(n.code,{children:"string"}),", or a ",(0,s.jsx)(n.code,{children:"function"})," it returns the length property"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["For the ",(0,s.jsx)(n.code,{children:"value"})," getter method, if the stored data is serializable (e.g a primitive\nJavascript type, a plain object), a copy of the data is returned. However, if\nthe data is not serializable (e.g a class instance, function etc), a reference\nto it is returned."]}),"\n",(0,s.jsx)(n.h2,{id:"best-practices",children:"Best practices"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Use more ",(0,s.jsx)(n.code,{children:"gets"})," than ",(0,s.jsx)(n.code,{children:"observes"})," in producers."]}),"\n",(0,s.jsxs)(n.p,{children:["Producers should have a very narrow window for triggering and the ",(0,s.jsx)(n.code,{children:"observe"})," should be reserved for the triggering specificity. When you can't justify that some data determines the triggering then that data should be retrieved using a ",(0,s.jsx)(n.code,{children:"get"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"views"})," should not use ",(0,s.jsx)(n.code,{children:"get"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Views should be completely reactive and always rely on fresh data to re-render."}),"\n",(0,s.jsxs)(n.p,{children:["The only valid exception is regarding handling a user event (like a ",(0,s.jsx)(n.code,{children:"click"}),")\nwhich is outside rendering."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// DON'T DO THIS!\nconst a: view = ({ a = get.a }) => <div>{a.value()}</div>\n\n// DON\"T DO THIS!\nconst b: view = ({ a = get.a.value() }) => <div>{a}</div>\n\n// ONLY VALID USE CASE\nconst c: view = ({ a = get.a }) => <button onClick={() => console.log(a.value())} />\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Use an ",(0,s.jsx)(n.strong,{children:"eager"})," ",(0,s.jsx)(n.code,{children:"get"})," for sync usage."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Use a ",(0,s.jsx)(n.strong,{children:"lazy"})," ",(0,s.jsx)(n.code,{children:"get"})," for async usage."]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},9596:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var s=t(7402);const r={},i=s.createContext(r);function a(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);