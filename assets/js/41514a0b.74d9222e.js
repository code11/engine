"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7991],{7429:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>r});var s=n(7250),o=n(9596);const a={id:"static-ui",title:"Static UI",sidebar_label:"Static UI"},i=void 0,l={id:"tutorials/react/static-ui",title:"Static UI",description:"This tutorial takes a top-down approach for building the todos app. This chapter",source:"@site/docs/tutorials/react/static-ui.md",sourceDirName:"tutorials/react",slug:"/tutorials/react/static-ui",permalink:"/engine/docs/tutorials/react/static-ui",draft:!1,unlisted:!1,editUrl:"https://github.com/code11/engine/edit/master/docs/docs/tutorials/react/static-ui.md",tags:[],version:"current",frontMatter:{id:"static-ui",title:"Static UI",sidebar_label:"Static UI"},sidebar:"docs",previous:{title:"Setup",permalink:"/engine/docs/tutorials/react/setup"},next:{title:"State is King",permalink:"/engine/docs/tutorials/react/state-is-king"}},c={},r=[];function d(e){const t={code:"code",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:["This tutorial takes a top-down approach for building the todos app. This chapter\nadds the static UI of our ",(0,s.jsx)(t.code,{children:"App"}),", which will be given life with Engine in\nsubsequent chapters. Replace the code you find in ",(0,s.jsx)(t.code,{children:"App.tsx"})," as follows:"]}),"\n",(0,s.jsxs)(t.p,{children:["Add the todos ",(0,s.jsx)(t.code,{children:"<input>"})," in ",(0,s.jsx)(t.code,{children:"App.tsx"}),":"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tsx",children:'import "todomvc-app-css/index.css";\n\nconst App = () => (\n  <section className="todoapp">\n    <header className="header">\n      <h1>todos</h1>\n    </header>\n    <input\n      className="new-todo"\n      placeholder="What needs to be done?"\n      autoFocus={true}\n    />\n'})}),"\n",(0,s.jsx)(t.p,{children:'Next section lists all the todos, and also has a control to toggle "Done"\nstatus of all todo items.'}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tsx",children:'<section className="main">\n  <input id="toggle-all" className="toggle-all" type="checkbox" />\n  <label htmlFor="toggle-all">Mark all as complete</label>\n\n  <ul className="todo-list">\n    <li>\n      <div className="view">\n        <input className="toggle" type="checkbox" />\n        <label>Give life to my TODOs</label>\n        <button className="destroy" />\n      </div>\n    </li>\n  </ul>\n</section>\n'})}),"\n",(0,s.jsx)(t.p,{children:"And finally, the footer has some more controls for viewing todos, and clearing\nthem."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tsx",children:'    <footer className="footer">\n      <span className="todo-count">\n        <strong>1</strong> items left\n      </span>\n      <ul className="filters">\n        <li>\n          <a href="#/" className="selected">\n            All\n          </a>\n        </li>\n        <li>\n          <a href="#/active">Active</a>\n        </li>\n        <li>\n          <a href="#/completed">Completed</a>\n        </li>\n      </ul>\n      <button className="clear-completed">Clear completed</button>\n    </footer>\n  </section>\n);\n\nexport default App;\n'})}),"\n",(0,s.jsx)(t.p,{children:"Next chapter will populate todo items from state instead of hard-coding them in\nJSX."})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},9596:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>l});var s=n(7402);const o={},a=s.createContext(o);function i(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(a.Provider,{value:t},e.children)}}}]);