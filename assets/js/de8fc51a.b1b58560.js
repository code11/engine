"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9078],{9652:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>l,frontMatter:()=>i,metadata:()=>s,toc:()=>d});var a=n(7250),r=n(9596);const i={id:"param",title:"param",sidebar_label:"param"},o=void 0,s={id:"api/param",title:"param",description:"Overview",source:"@site/docs/api/param.md",sourceDirName:"api",slug:"/api/param",permalink:"/engine/docs/api/param",draft:!1,unlisted:!1,editUrl:"https://github.com/code11/engine/edit/master/docs/docs/api/param.md",tags:[],version:"current",frontMatter:{id:"param",title:"param",sidebar_label:"param"},sidebar:"docs",previous:{title:"arg",permalink:"/engine/docs/api/arg"},next:{title:"wildcard",permalink:"/engine/docs/api/wildcard"}},c={},d=[{value:"Overview",id:"overview",level:2},{value:"Example",id:"example",level:2}];function p(e){const t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.code,{children:"param"})," allow using runtime values from the view/producer to create new paths."]}),"\n",(0,a.jsxs)(t.p,{children:["Occasionally, a ",(0,a.jsx)(t.code,{children:"producer"})," or ",(0,a.jsx)(t.code,{children:"view"})," need to access a path in state, which\ndepends on a value which is created in the producer itself. ",(0,a.jsx)(t.code,{children:"param"})," is the\n",(0,a.jsx)(t.a,{href:"/docs/concepts/path-composition",children:"path-composition"})," operator to use in such\nsituations."]}),"\n",(0,a.jsxs)(t.p,{children:["For example, ",(0,a.jsx)(t.code,{children:"update.*"})," functions can be given an object in their second\nargument. Every key in this object can then be referred to with ",(0,a.jsx)(t.code,{children:"param.<key>"})," in\nthe header"]}),"\n",(0,a.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-tsx",children:"const App: view = ({\n  update = update.items[param.foo][param.bar]\n}) => (\n  <input onChange={e => update(e.target.value,\n    { foo: 'state_path', bar: 'yet_another_state_path' }\n  )}>\n);\n"})}),"\n",(0,a.jsx)(t.p,{children:"It allows moving a lot of complexity of accessing and setting of state, to the\npath structure; without needing any intermediate state in the view/producer\nitself."})]})}function l(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},9596:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>s});var a=n(7402);const r={},i=a.createContext(r);function o(e){const t=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),a.createElement(i.Provider,{value:t},e.children)}}}]);