"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6680],{995:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>a,metadata:()=>r,toc:()=>o});var s=t(7250),i=t(9596);const a={id:"setup",title:"Setup",sidebar_label:"Setup"},c=void 0,r={id:"tutorials/react/setup",title:"Setup",description:"Quick Start",source:"@site/docs/tutorials/react/setup.md",sourceDirName:"tutorials/react",slug:"/tutorials/react/setup",permalink:"/engine/docs/tutorials/react/setup",draft:!1,unlisted:!1,editUrl:"https://github.com/code11/engine/edit/master/docs/docs/tutorials/react/setup.md",tags:[],version:"current",frontMatter:{id:"setup",title:"Setup",sidebar_label:"Setup"},sidebar:"docs",previous:{title:"Getting started",permalink:"/engine/docs/getting-started"},next:{title:"Static UI",permalink:"/engine/docs/tutorials/react/static-ui"}},d={},o=[{value:"Quick Start",id:"quick-start",level:2},{value:"Building a React Engine App",id:"building-a-react-engine-app",level:2},{value:"Setup",id:"setup",level:2},{value:"Create an Engine instance",id:"create-an-engine-instance",level:3},{value:"Add styles",id:"add-styles",level:3},{value:"Starter Markup",id:"starter-markup",level:3},{value:"Cleanup",id:"cleanup",level:3}];function l(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"quick-start",children:"Quick Start"}),"\n",(0,s.jsx)(n.p,{children:"Although Engine itself is platform neutral, Engine's reactive features really\nshine when building a React application."}),"\n",(0,s.jsx)(n.h2,{id:"building-a-react-engine-app",children:"Building a React Engine App"}),"\n",(0,s.jsxs)(n.p,{children:["This tutorial builds a TodoMVC app following the specs defined at\n",(0,s.jsx)(n.a,{href:"http://todomvc.com/",children:"todomvc.com"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"setup",children:"Setup"}),"\n",(0,s.jsxs)(n.p,{children:["Use ",(0,s.jsx)(n.code,{children:"@c11/engine.cli"})," to create an engine starter app."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"npx @c11/engine.cli create engine-todo-app\n"})}),"\n",(0,s.jsx)(n.p,{children:"Engine itself is written in Typescript, and recommends using it for creating\nReact applications using Engine."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"yarn start"})," can be used to start the app on\n",(0,s.jsx)(n.a,{href:"http://localhost:8080",children:"localhost:8080"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"create-an-engine-instance",children:"Create an Engine instance"}),"\n",(0,s.jsxs)(n.p,{children:["First step for building an Engine app is creating an ",(0,s.jsx)(n.code,{children:"Engine"})," instance, and let\nit take control of the app. In the ",(0,s.jsx)(n.code,{children:"src/index.tsx"})," file let's add some todos:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-diff",children:' const app = engine({\n   state: {\n-    name: "John Doe",\n-    item: {\n-      a: "this is a",\n-      b: "this is b",\n-    },\n+   initial: { }\n   },\n   use: [\n     render(<App />, "#app", {\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Engine takes care of mounting the app to DOM instead of having ",(0,s.jsx)(n.code,{children:"react-dom"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"This creates a valid, running Engine app."}),"\n",(0,s.jsx)(n.p,{children:"Up next: some chores to set the stage for building the TodoMVC app:"}),"\n",(0,s.jsx)(n.h3,{id:"add-styles",children:"Add styles"}),"\n",(0,s.jsxs)(n.p,{children:["To keep the focus on building the React side of things, install\n",(0,s.jsx)(n.code,{children:"todomvc-app-css"})," npm package with ",(0,s.jsx)(n.code,{children:"yarn add todomvc-app-css"}),". Update\n",(0,s.jsx)(n.code,{children:"src/App.tsx"})," file to use it:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-diff",children:'+ import "todomvc-app-css/index.css";\n'})}),"\n",(0,s.jsx)(n.p,{children:"This step:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Imported CSS from ",(0,s.jsx)(n.code,{children:"todomvc-app-css"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Note"}),": You might need to install ",(0,s.jsx)(n.code,{children:"postcss"})," v.8 for ",(0,s.jsx)(n.code,{children:"todomvc-app-css"})," to work."]}),"\n",(0,s.jsx)(n.h3,{id:"starter-markup",children:"Starter Markup"}),"\n",(0,s.jsxs)(n.p,{children:["To conclude this chapter, update ",(0,s.jsx)(n.code,{children:"src/App.tsx"})," and add some markup to make the\napp feel more like the TodoMVC. Replace contents of ",(0,s.jsx)(n.code,{children:"src/App.tsx"})," with:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'const App = () => (\n  <section className="todoapp">\n    <div>\n      <header className="header">\n        <h1>todos</h1>\n      </header>\n    </div>\n  </section>\n);\n\nexport default App;\n'})}),"\n",(0,s.jsxs)(n.p,{children:["CSS is provided by ",(0,s.jsx)(n.code,{children:"todomvc-app-css"})," npm package, which mandates using correct\nCSS classes to keep the app looking right."]}),"\n",(0,s.jsx)(n.h3,{id:"cleanup",children:"Cleanup"}),"\n",(0,s.jsxs)(n.p,{children:["The engine CLI uses a starter template. Go on and remove ",(0,s.jsx)(n.code,{children:"greeting.ts"}),", ",(0,s.jsx)(n.code,{children:"greeting.spec.ts"})," and ",(0,s.jsx)(n.code,{children:"Component.tsx"})," once you updated ",(0,s.jsx)(n.code,{children:"App.tsx"}),"."]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},9596:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>r});var s=t(7402);const i={},a=s.createContext(i);function c(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);