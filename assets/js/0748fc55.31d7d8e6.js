"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4755],{6089:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var s=t(7250),i=t(9596);const r={id:"collections",title:"Collections",sidebar_label:"Collections"},o=void 0,a={id:"patterns/collections",title:"Collections",description:"Collections group similar data structures together and provide a friendly way of",source:"@site/docs/patterns/collections.md",sourceDirName:"patterns",slug:"/patterns/collections",permalink:"/engine/docs/patterns/collections",draft:!1,unlisted:!1,editUrl:"https://github.com/code11/engine/edit/master/docs/docs/patterns/collections.md",tags:[],version:"current",frontMatter:{id:"collections",title:"Collections",sidebar_label:"Collections"},sidebar:"docs",previous:{title:"Aggregate",permalink:"/engine/docs/patterns/aggregate"},next:{title:"Flags",permalink:"/engine/docs/patterns/flags"}},c={},d=[];function l(e){const n={code:"code",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Collections group similar data structures together and provide a friendly way of\naccessing and working with those data structures. Collections are very useful\nwhen used in conjuction with entities."}),"\n",(0,s.jsx)(n.p,{children:"Entities are domain objects that are uniquely defined by a unique identifier."}),"\n",(0,s.jsx)(n.p,{children:"In Engine, it's best to aim for achieving a balance between normalizing and\ndenormalizing data based on the needs of observing changes or accessing partial\nor processed data. As a rule of thumb, data received from the outside of the\nsystem should be kept in a raw form somewhere so that it can be transformed in\nthe many ways needed from your system."}),"\n",(0,s.jsxs)(n.p,{children:["Also, it's very important for an Entity to have its ",(0,s.jsx)(n.code,{children:"id"})," stored in its data\nstructure. Entities should always be able to exist on their own if needed."]}),"\n",(0,s.jsx)(n.p,{children:"In the following example several data processing patterns are used:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"articles.raw"})," stores denormalized data received from an API."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"articles.items"})," is created by a producer that ",(0,s.jsx)(n.code,{children:"reduce"}),"s ",(0,s.jsx)(n.code,{children:"articles.raw"})," and\nextracts only the information needed by the application; and only the items\nneeded for the application."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"articles.ids"})," is created by a producer that ",(0,s.jsx)(n.code,{children:"reduce"}),"s ",(0,s.jsx)(n.code,{children:"articles.items"})," and\nextracts only the list of ids. This is useful when you want to iterate on all\narticles but you don't want to get the data associated with the ids."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"articles.count"})," is made by a producer that ",(0,s.jsx)(n.code,{children:"reduce"}),"s ",(0,s.jsx)(n.code,{children:"articles.ids"})," and gives\nthe number of articles."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"articles.filters"})," is made by a producer that groups articles by their\ncategory. It's useful when you want to iterate on a single category. The\nexistence of this producer is determined by the need of this information."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"{\n  articles: {\n    raw: {\n      abc: {\n        [...]\n      },\n      dfg: {\n        [...]\n      },\n      xyz: {\n        [...]\n      },\n    },\n    items: {\n      abc: {\n        id: \"abc\",\n        title: 'Abc shorts',\n        category: 'shorts'\n      },\n      xyz: {\n        id: \"xyz\",\n        title: 'Xyz news',\n        category: 'news'\n      },\n    },\n    ids: ['xyz'],\n    count: 1,\n    filters: {\n      category: {\n        shorts: ['abc'],\n        news: ['xyz]\n      }\n    },\n  }\n}\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},9596:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var s=t(7402);const i={},r=s.createContext(i);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);