// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`engine.babel-plugin-syntax should add the import statement only once: should add the import statement only once 1`] = `

const foo: view = ({ foo = observe.foo }) => { }
const bar: view = ({ foo = observe.foo }) => { }

      ↓ ↓ ↓ ↓ ↓ ↓

import { view as viewRandomId } from "engineViewLibrary";
const foo = viewRandomId({
  fn: ({ foo }) => {},
  props: {
    type: "STRUCT",
    value: {
      foo: {
        type: "OBSERVE",
        path: [
          {
            type: "CONST",
            value: "foo",
          },
        ],
      },
    },
  },
  meta: {
    name: "foo",
  },
  type: "view",
  buildId: "unique_id",
});
const bar = viewRandomId({
  fn: ({ foo }) => {},
  props: {
    type: "STRUCT",
    value: {
      foo: {
        type: "OBSERVE",
        path: [
          {
            type: "CONST",
            value: "foo",
          },
        ],
      },
    },
  },
  meta: {
    name: "bar",
  },
  type: "view",
  buildId: "unique_id",
});


`;

exports[`engine.babel-plugin-syntax should compile a view: should compile a view 1`] = `

const foo: view = ({ foo = observe.foo }) => {}

      ↓ ↓ ↓ ↓ ↓ ↓

import { view as viewRandomId } from "engineViewLibrary";
const foo = viewRandomId({
  fn: ({ foo }) => {},
  props: {
    type: "STRUCT",
    value: {
      foo: {
        type: "OBSERVE",
        path: [
          {
            type: "CONST",
            value: "foo",
          },
        ],
      },
    },
  },
  meta: {
    name: "foo",
  },
  type: "view",
  buildId: "unique_id",
});


`;

exports[`engine.babel-plugin-syntax should support empty arguments: should support empty arguments 1`] = `

const foo: view = () => {}

      ↓ ↓ ↓ ↓ ↓ ↓

import { view as viewRandomId } from "engineViewLibrary";
const foo = viewRandomId({
  fn: () => {},
  props: {
    type: "PASSTHROUGH",
  },
  meta: {
    name: "foo",
  },
  type: "view",
  buildId: "unique_id",
});


`;

exports[`engine.babel-plugin-syntax should support imports from other engine packages: should support imports from other engine packages 1`] = `

import { bam } from "bam-bam"
const foo: view = (props) => {}
const bar = bam({ a: foo })

      ↓ ↓ ↓ ↓ ↓ ↓

import { view as viewRandomId } from "engineViewLibrary";
import { bam } from "bam-bam";
const foo = viewRandomId({
  fn: (props) => {},
  props: {
    type: "PASSTHROUGH",
  },
  meta: {
    name: "foo",
  },
  type: "view",
  buildId: "unique_id",
});
const bar = bam({
  a: foo,
});


`;

exports[`engine.babel-plugin-syntax should support props arguments for passthrough: should support props arguments for passthrough 1`] = `

const foo: view = (props) => {}

      ↓ ↓ ↓ ↓ ↓ ↓

import { view as viewRandomId } from "engineViewLibrary";
const foo = viewRandomId({
  fn: (props) => {},
  props: {
    type: "PASSTHROUGH",
  },
  meta: {
    name: "foo",
  },
  type: "view",
  buildId: "unique_id",
});


`;

exports[`engine.babel-plugin-syntax should support simple prop params: should support simple prop params 1`] = `

const foo: view = ({ prop }) => {}

      ↓ ↓ ↓ ↓ ↓ ↓

import { view as viewRandomId } from "engineViewLibrary";
const foo = viewRandomId({
  fn: ({ prop }) => {},
  props: {
    type: "STRUCT",
    value: {
      prop: {
        type: "VALUE",
        value: {
          type: "EXTERNAL",
          path: ["prop"],
        },
      },
    },
  },
  meta: {
    name: "foo",
  },
  type: "view",
  buildId: "unique_id",
});


`;
