// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`unknown plugin should keep values in paths: should keep values in paths 1`] = `

import { producer } from '@c11/engine.macro'
const val = "321"
const obj = {
  foo: {
    bar: "234"
  }
}
const a: producer = ({
  a1 = get.foo[123],
  a2 = get.foo[val],
  a3 = get.foo["val"].foo,
  a4 = get.foo[obj.foo.bar].baz,
  a5 = get.foo[prop.foo][Request.foo][param.bar].baz,
  a6 = get.foo[\`bam\${val}baz\`].foo,
}) => {  }

      ↓ ↓ ↓ ↓ ↓ ↓

"use strict";

var val = "321";
var obj = {
  foo: {
    bar: "234",
  },
};
var a = {
  props: {
    type: "STRUCT",
    value: {
      a1: {
        type: "GET",
        path: [
          {
            type: "CONST",
            value: "foo",
          },
          {
            type: "CONST",
            value: "123",
          },
        ],
      },
      a2: {
        type: "GET",
        path: [
          {
            type: "CONST",
            value: "foo",
          },
          {
            type: "CONST",
            value: val,
          },
        ],
      },
      a3: {
        type: "GET",
        path: [
          {
            type: "CONST",
            value: "foo",
          },
          {
            type: "CONST",
            value: "val",
          },
          {
            type: "CONST",
            value: "foo",
          },
        ],
      },
      a4: {
        type: "GET",
        path: [
          {
            type: "CONST",
            value: "foo",
          },
          {
            type: "CONST",
            value: obj.foo.bar,
          },
          {
            type: "CONST",
            value: "baz",
          },
        ],
      },
      a5: {
        type: "GET",
        path: [
          {
            type: "CONST",
            value: "foo",
          },
          {
            type: "EXTERNAL",
            path: ["foo"],
          },
          {
            type: "CONST",
            value: Request.foo,
          },
          {
            type: "INVOKE",
            path: ["bar"],
          },
          {
            type: "CONST",
            value: "baz",
          },
        ],
      },
      a6: {
        type: "GET",
        path: [
          {
            type: "CONST",
            value: "foo",
          },
          {
            type: "CONST",
            value: "bam".concat(val, "baz"),
          },
          {
            type: "CONST",
            value: "foo",
          },
        ],
      },
    },
    meta: {},
  },
  fn: function fn(_ref) {
    var a1 = _ref.a1,
      a2 = _ref.a2,
      a3 = _ref.a3,
      a4 = _ref.a4,
      a5 = _ref.a5,
      a6 = _ref.a6;
  },
};


`;
